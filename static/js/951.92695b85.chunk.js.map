{"version":3,"file":"static/js/951.92695b85.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","redux/contacts/selectors.js","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactItem/ContactItem.module.css?be2b","components/ContactItem/ContactItem.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"button\":\"ContactForm_button__eSwX9\"};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = store => store.phonebook.contacts.items;\nexport const selectFilter = store => store.phonebook.filter;\nexport const selectisLoading = store => store.phonebook.contacts.isLoading;\nexport const selectError = store => store.phonebook.contacts.error;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(filter.trim().toLowerCase()) ||\n        contact.phone.includes(filter)\n    );\n  }\n);\n","import React, { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from '../../redux/contacts/operations';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n  const [name, setName] = useState('');\n  const [phone, setNumber] = useState('');\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setNumber(value);\n        break;\n\n      default:\n        console.warn(`There is no input with name: ${name}`);\n    }\n  };\n\n  const handleAddContact = evt => {\n    evt.preventDefault();\n\n    const contactData = { name, phone };\n\n    const alreadyExist = contacts.some(\n      contact => contact.name.toLowerCase() === contactData.name.toLowerCase()\n    );\n\n    if (alreadyExist) {\n      alert(`${contactData.name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContact(contactData));\n\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleAddContact}>\n      <label>\n        Enter your name:\n        <input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"on\"\n          value={name}\n          required\n        />\n      </label>\n\n      <label>\n        Enter your number:\n        <input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"phone\"\n          autoComplete=\"on\"\n          value={phone}\n          required\n        />\n      </label>\n\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"item\":\"ContactItem_item__gxreB\",\"button\":\"ContactItem_button__IRFBz\"};","import React from 'react';\nimport css from './ContactItem.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nexport const ContactItem = ({ name, number, id }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <li key={id} className={css.item} id={id}>\n      <p>{name}</p>\n      <p>{number}</p>\n      <button onClick={() => handleDeleteContact(id)} className={css.button}>\n        Delete\n      </button>\n    </li>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n  selectError,\n  selectFilteredContacts,\n  selectisLoading,\n} from '../../redux/contacts/selectors';\n\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { ContactItem } from 'components/ContactItem/ContactItem';\nimport css from './ContactList.module.css';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectisLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <p>Loading...</p>}\n\n      {error && <p>{error}</p>}\n\n      {contacts && contacts.length > 0 && (\n        <ul className={css.list}>\n          {contacts.map(({ name, phone, id }) => {\n            return <ContactItem name={name} number={phone} id={id} key={id} />;\n          })}\n        </ul>\n      )}\n    </>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\"};","import React from 'react';\nimport css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/contactsSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleFindContact = e => {\n    dispatch(setFilter(e.target.value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name:\n      <input\n        onChange={handleFindContact}\n        type=\"text\"\n        name=\"search\"\n        autoComplete=\"on\"\n        value={filter}\n      />\n    </label>\n  );\n};\n","import { ContactForm, ContactList, Filter } from 'components';\nimport React from 'react';\n\nconst ContactsPage = () => {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","store","phonebook","contacts","items","selectFilter","filter","selectisLoading","isLoading","selectError","error","selectFilteredContacts","createSelector","contact","name","toLowerCase","includes","trim","phone","ContactForm","dispatch","useDispatch","useSelector","_useState","useState","_useState2","_slicedToArray","setName","_useState3","_useState4","setNumber","handleChange","e","_e$currentTarget","currentTarget","value","console","warn","concat","_jsxs","className","css","onSubmit","evt","preventDefault","contactData","some","alert","addContact","children","_jsx","onChange","type","autoComplete","required","ContactItem","_ref","number","id","onClick","contactId","deleteContact","ContactList","useEffect","fetchContacts","_Fragment","length","map","Filter","setFilter","target"],"sourceRoot":""}